package br.com.artheus.matchhire.mapper;

import br.com.artheus.matchhire.domain.model.Candidate;
import br.com.artheus.matchhire.dto.CandidateRequestDTO;
import br.com.artheus.matchhire.dto.CandidateResponseDTO;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.Mappings;

/**
 * Mapper for converting between Candidate entities and DTOs.
 */
@Mapper(componentModel = "spring")
public interface CandidateMapper {

    /**
     * Converts CandidateRequestDTO to Candidate entity.
     * Unmapped fields are ignored because they are managed automatically or set in the service layer.
     */
    @Mappings({
            @Mapping(target = "id", ignore = true) // Ignored because it's auto-generated by the database
            ,
            @Mapping(target = "publicId", ignore = true) // Ignored because it's automatically generated in @PrePersist
            ,
            @Mapping(target = "applications", ignore = true) // Ignored because applications are linked in the service layer
            ,
            @Mapping(target = "active", ignore = true) // Ignored because it has a default initialization value
    })
    Candidate toEntity(CandidateRequestDTO dto);

    /**
     * Converts Candidate entity to CandidateResponseDTO.
     */
    @Mapping(source = "publicId", target = "publicId")
    CandidateResponseDTO toResponseDTO(Candidate candidate);
}
